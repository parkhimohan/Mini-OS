
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.text.BadLocationException;

public class Terminal extends javax.swing.JInternalFrame {
    String[] s=new String[5];
    String path=new String();
    int caretpos;
    
    public Terminal() {
        initComponents();
        path="/home/minios";
        textArea1.append("minios-x552ld:~>");
        caretpos=14;
        addInternalFrameListener(new InternalFrameAdapter(){
            public void internalFrameClosed(InternalFrameEvent e) {
                System.out.print("hello");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Terminal");
        setFrameIcon(null);

        textArea1.setBackground(new java.awt.Color(27, 8, 8));
        textArea1.setColumns(20);
        textArea1.setForeground(new java.awt.Color(31, 220, 112));
        textArea1.setRows(5);
        textArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(textArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textArea1KeyPressed
        
        int caretpos1 = textArea1.getCaretPosition();
        
        if(caretpos1>=caretpos)
        {
            if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE && caretpos1==caretpos) {
                evt.consume();
               
                textArea1.setEditable(false);
            }
            else
                textArea1.setEditable(true);
        }
        else
           textArea1.setEditable(false); 
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
           
            caretpos = textArea1.getCaretPosition();
            try {
                int linenum=textArea1.getLineOfOffset(caretpos);
                int initial=textArea1.getLineStartOffset(linenum);
                textArea1.select(initial, caretpos);
                String str=textArea1.getSelectedText();
                textArea1.select(caretpos,caretpos);
                str=str.substring(str.lastIndexOf('>')+1);
                caretpos=caretpos+15;
                if(str.length()>0)
                {
                    
                    s=str.split(" ");
                    
                   
                    if(s[0].equals("cd"))
                    {
                        if(s.length>1){
                            if(s[1].equals("..")){
                                if(path.equals("/home/minios"))
                                {
                                    textArea1.append("\n"+"minios-x552ld:~>");
                                }
                                else
                                {
                                    path=path.substring(0,path.lastIndexOf("/"));
                                    if("/home/minios".equals(path))
                                    {
                                        textArea1.append("\n"+"minios-x552ld:~>");
                                    }
                                    else
                                    {
                                        textArea1.append("\n"+"minios-x552ld:~"+path.substring(path.lastIndexOf("/"))+">");
                                    }
                                }
                            }
                            else  {  
                                String p=path;
                                p= p.concat("/");
                                p=p.concat(s[1]);
                                //ta.append("\n"+p);
                                File folder = new File(p);
                                if(folder.exists())
                                {
                                    path=p;
                                    textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                                }
                                else
                                {
                                    textArea1.append("\n"+"No such file or directory");
                                    if("/home/minios".equals(path))
                                    {
                                        textArea1.append("\n"+"minios-x552ld:~>");
                                    }
                                    else
                                    {
                                        textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                                    }
                                }
                            }
                            
                        }
                        else
                        {
                            textArea1.append("\n"+"Invalid syntax");
                            if("/home/minios".equals(path))
                                {
                                    textArea1.append("\n"+"minios-x552ld:~>");
                                }
                                else
                                {
                                    textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                                }
                        }
                    }
                    else if(s[0].equals("ls"))
                    {
                        File folder = new File(path);
                        File[] listOfFiles = folder.listFiles();
                        if(listOfFiles.length>0){
                        for (int i = 0; i < listOfFiles.length; i++) {
                            if(listOfFiles[i].isFile())
                                textArea1.append("\n"+"file"+" "+listOfFiles[i].getName());
                            else if(listOfFiles[i].isDirectory())
                                textArea1.append("\n"+"directory"+" "+listOfFiles[i].getName()); 
                        }
                        }
                        else
                        {
                            textArea1.append("\n"+"No file or directory");
                        }
                        if("/home/minios".equals(path))
                        {
                            textArea1.append("\n"+"minios-x552ld:~>");
                        }
                        else
                        {
                            textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                        }
                    }
                    else if(s[0].equals("pwd"))
                    {
                        
                        textArea1.append("\n"+path);
                        if("/home/minios".equals(path))
                        {
                            textArea1.append("\n"+"minios-x552ld:~>");
                        }
                        else
                        {
                            textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                        }
                    }
                    else if(s[0].equals("notepad"))
                    {
                        //if(s.length>1){
                            String p=path;
                            p=p.concat("/");
                            p=p.concat(s[1]);
                            new Notepad().setVisible(true);
                            /*try {
                                Desktop.opennotepad(p);
                            } catch (IOException ex) {
                                Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
                            }*/
                            //cp.show();
                            System.out.println("terminal");
                            if("/home/minios".equals(path))
                            {
                                textArea1.append("\n"+"minios-x552ld:~>");
                            }
                            else
                            {
                                textArea1.append("\n"+"minios-x552ld:~"+path.substring(10)+">");
                            }
                        
                    //}
                    }
                
                
            } 
            } catch (BadLocationException ex) {
                Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
           }
    }

    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea1;
}
